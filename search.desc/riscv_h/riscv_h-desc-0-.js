searchState.loadedDescShard("riscv_h", 0, "RISC-V Hypervisor Extension Support\nRISC-V hypervisor extension register definitions and …\nHypervisor counter enable register Hypervisor Guest …\nHypervisor exception delegation register Hypervisor …\nHypervisor guest address translation and protection …\nHypervisor guest external interrupt enable register …\nHypervisor guest external interrupt pending register …\nHypervisor interrupt delegation register Hypervisor …\nHypervisor interrupt enable register Hypervisor Interrupt …\nHypervisor interrupt pending register Hypervisor Interrupt …\nHypervisor status register Hypervisor Status Register.\nHypervisor time delta register Hypervisor Time Delta …\nHypervisor time delta high register (for RV32) Hypervisor …\nHypervisor trap instruction register Hypervisor Trap …\nHypervisor trap value register Hypervisor Trap Value …\nHypervisor virtual interrupt pending register Hypervisor …\nVirtual supervisor address translation and protection …\nVirtual supervisor cause register Virtual Supervisor Cause …\nVirtual supervisor exception program counter Virtual …\nVirtual supervisor interrupt enable register Virtual …\nVirtual supervisor interrupt pending register Virtual …\nVirtual supervisor scratch register Virtual Supervisor …\nVirtual supervisor status register Virtual Supervisor …\nVirtual supervisor trap value register Virtual Supervisor …\nVirtual supervisor trap vector register Virtual Supervisor …\nHypervisor Counter Enable Register.\nReturns the raw bits of the register.\nCycle counter enable.\nHypervisor performance monitor 10 enable.\nHypervisor performance monitor 11 enable.\nHypervisor performance monitor 12 enable.\nHypervisor performance monitor 13 enable.\nHypervisor performance monitor 14 enable.\nHypervisor performance monitor 15 enable.\nHypervisor performance monitor 16 enable.\nHypervisor performance monitor 17 enable.\nHypervisor performance monitor 18 enable.\nHypervisor performance monitor 19 enable.\nHypervisor performance monitor 20 enable.\nHypervisor performance monitor 21 enable.\nHypervisor performance monitor 22 enable.\nHypervisor performance monitor 23 enable.\nHypervisor performance monitor 24 enable.\nHypervisor performance monitor 25 enable.\nHypervisor performance monitor 26 enable.\nHypervisor performance monitor 27 enable.\nHypervisor performance monitor 28 enable.\nHypervisor performance monitor 29 enable.\nHypervisor performance monitor 3 enable.\nHypervisor performance monitor 30 enable.\nHypervisor performance monitor 31 enable.\nHypervisor performance monitor 4 enable.\nHypervisor performance monitor 5 enable.\nHypervisor performance monitor 6 enable.\nHypervisor performance monitor 7 enable.\nHypervisor performance monitor 8 enable.\nHypervisor performance monitor 9 enable.\nInterrupt counter enable.\nTimer counter enable.\nReturns the status of the cycle counter.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor 3.\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor …\nReturns the status of the hypervisor performance monitor 4.\nReturns the status of the hypervisor performance monitor 5.\nReturns the status of the hypervisor performance monitor 6.\nReturns the status of the hypervisor performance monitor 7.\nReturns the status of the hypervisor performance monitor 8.\nReturns the status of the hypervisor performance monitor 9.\nCalls <code>U::from(self)</code>.\nReturns the status of the interrupt counter.\nReads the CSR.\nCycle counter enable.\nSets the status of the cycle counter.\nHypervisor performance monitor 10 enable.\nSets the status of the hypervisor performance monitor 10.\nHypervisor performance monitor 11 enable.\nSets the status of the hypervisor performance monitor 11.\nHypervisor performance monitor 12 enable.\nSets the status of the hypervisor performance monitor 12.\nHypervisor performance monitor 13 enable.\nSets the status of the hypervisor performance monitor 13.\nHypervisor performance monitor 14 enable.\nSets the status of the hypervisor performance monitor 14.\nHypervisor performance monitor 15 enable.\nSets the status of the hypervisor performance monitor 15.\nHypervisor performance monitor 16 enable.\nSets the status of the hypervisor performance monitor 16.\nHypervisor performance monitor 17 enable.\nSets the status of the hypervisor performance monitor 17.\nHypervisor performance monitor 18 enable.\nSets the status of the hypervisor performance monitor 18.\nHypervisor performance monitor 19 enable.\nSets the status of the hypervisor performance monitor 19.\nHypervisor performance monitor 20 enable.\nSets the status of the hypervisor performance monitor 20.\nHypervisor performance monitor 21 enable.\nSets the status of the hypervisor performance monitor 21.\nHypervisor performance monitor 22 enable.\nSets the status of the hypervisor performance monitor 22.\nHypervisor performance monitor 23 enable.\nSets the status of the hypervisor performance monitor 23.\nHypervisor performance monitor 24 enable.\nSets the status of the hypervisor performance monitor 24.\nHypervisor performance monitor 25 enable.\nSets the status of the hypervisor performance monitor 25.\nHypervisor performance monitor 26 enable.\nSets the status of the hypervisor performance monitor 26.\nHypervisor performance monitor 27 enable.\nSets the status of the hypervisor performance monitor 27.\nHypervisor performance monitor 28 enable.\nSets the status of the hypervisor performance monitor 28.\nHypervisor performance monitor 29 enable.\nSets the status of the hypervisor performance monitor 29.\nHypervisor performance monitor 3 enable.\nSets the status of the hypervisor performance monitor 3.\nHypervisor performance monitor 30 enable.\nSets the status of the hypervisor performance monitor 30.\nHypervisor performance monitor 31 enable.\nSets the status of the hypervisor performance monitor 31.\nHypervisor performance monitor 4 enable.\nSets the status of the hypervisor performance monitor 4.\nHypervisor performance monitor 5 enable.\nSets the status of the hypervisor performance monitor 5.\nHypervisor performance monitor 6 enable.\nSets the status of the hypervisor performance monitor 6.\nHypervisor performance monitor 7 enable.\nSets the status of the hypervisor performance monitor 7.\nHypervisor performance monitor 8 enable.\nSets the status of the hypervisor performance monitor 8.\nHypervisor performance monitor 9 enable.\nSets the status of the hypervisor performance monitor 9.\nInterrupt counter enable.\nSets the status of the interrupt counter.\nTimer counter enable.\nSets the status of the timer counter.\nReturns the status of the timer counter.\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nHypervisor Trap Delegation Registers.\nReturns the raw bits of the register.\nInstruction address misaligned enable.\nInstruction access fault enable.\nInstruction page fault enable.\nLoad page fault enable.\nStore/AMO page fault enable.\nIllegal instruction enable.\nBreakpoint enable.\nLoad address misaligned enable.\nLoad access fault enable.\nStore/AMO address misaligned enable.\nStore/AMO access fault enable.\nEnvironment call enable.\nReturns the instruction address misaligned exception …\nReturns the instruction access fault exception delegation.\nReturns the instruction page fault exception delegation.\nReturns the load page fault exception delegation.\nReturns the store/AMO page fault exception delegation.\nReturns the illegal instruction exception delegation.\nReturns the breakpoint exception delegation.\nReturns the load address misaligned exception delegation.\nReturns the load access fault exception delegation.\nReturns the store/AMO address misaligned exception …\nReturns the store/AMO access fault exception delegation.\nReturns the environment call exception delegation.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nInstruction address misaligned enable.\nSets the instruction address misaligned exception …\nInstruction access fault enable.\nSets the instruction access fault exception delegation.\nInstruction page fault enable.\nSets the instruction page fault exception delegation.\nLoad page fault enable.\nSets the load page fault exception delegation.\nStore/AMO page fault enable.\nSets the store/AMO page fault exception delegation.\nIllegal instruction enable.\nSets the illegal instruction exception delegation.\nBreakpoint enable.\nSets the breakpoint exception delegation.\nLoad address misaligned enable.\nSets the load address misaligned exception delegation.\nLoad access fault enable.\nSets the load access fault exception delegation.\nStore/AMO address misaligned enable.\nSets the store/AMO address misaligned exception delegation.\nStore/AMO access fault enable.\nSets the store/AMO access fault exception delegation.\nEnvironment call enable.\nSets the environment call exception delegation.\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nBare\nHypervisor Guest Address Translation and Protection …\nHypervisor Guest Address Translation and Protection …\nSupervisor Virtual Address Translation (SV39)\nSupervisor Virtual Address Translation (SV48)\nReturns the raw bits of the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the guest address translation mode.\nReturns the Physical Page Number for root page table.\nReads the CSR.\nSets the guest address translation mode.\nSets the Physical Page Number for root page table.\nSets the Virtual machine ID.\nAttempts to reads the CSR.\nReturns the Virtual machine ID.\nWrites the register value to the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nHypervisor Interrupt Delegation Register.\nReturns the raw bits of the register.\nSupervisor external interrupt delegation.\nSupervisor software interrupt delegation.\nSupervisor timer interrupt delegation.\nReturns the status of the supervisor external interrupt …\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nSupervisor external interrupt delegation.\nSets the status of the supervisor external interrupt …\nSupervisor software interrupt delegation.\nSets the status of the supervisor software interrupt …\nSupervisor timer interrupt delegation.\nSets the status of the supervisor timer interrupt …\nReturns the status of the supervisor software interrupt …\nReturns the status of the supervisor timer interrupt …\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nHypervisor Interrupt Enable Register.\nSupervisor guest external interrupt enable.\nVirtual supervisor external interrupt enable.\nVirtual supervisor software interrupt enable.\nVirtual supervisor timer interrupt enable.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nSupervisor guest external interrupt enable.\nSets the status of the supervisor guest external interrupt …\nVirtual supervisor external interrupt enable.\nSets the status of the virtual supervisor external …\nVirtual supervisor software interrupt enable.\nSets the status of the virtual supervisor software …\nVirtual supervisor timer interrupt enable.\nSets the status of the virtual supervisor timer interrupt …\nReturns the status of the supervisor guest external …\nAttempts to reads the CSR.\nReturns the status of the virtual supervisor external …\nReturns the status of the virtual supervisor software …\nReturns the status of the virtual supervisor timer …\nHypervisor Interrupt Registers.\nReturns the raw bits of the register.\nSupervisor guest external interrupt pending enable.\nVirtual supervisor external interrupt pending enable.\nVirtual supervisor software interrupt pending enable.\nVirtual supervisor timer interrupt pending enable.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nSupervisor guest external interrupt pending enable.\nSets the supervisor guest external interrupt pending.\nVirtual supervisor external interrupt pending enable.\nSets the virtual supervisor external interrupt pending.\nVirtual supervisor software interrupt pending enable.\nSets the virtual supervisor software interrupt pending.\nVirtual supervisor timer interrupt pending enable.\nSets the virtual supervisor timer interrupt pending.\nReturns the supervisor guest external interrupt pending.\nAttempts to reads the CSR.\nReturns the virtual supervisor external interrupt pending.\nReturns the virtual supervisor software interrupt pending.\nReturns the virtual supervisor timer interrupt pending.\nWrites the register value to the CSR.\nHypervisor Status Register\n128-bit virtual address space\n32-bit virtual address space\n64-bit virtual address space\nVirtual Supervisor Address Translation and Protection …\nReturns the raw bits of the register.\nGuest virtual address enable.\nHypervisor user mode enable.\nSupervisor previous virtualization mode enable.\nSupervisor previous virtual privilege enable.\nVS-mode memory access endianness enable.\nTSR for VS-mode enable.\nTVM for VS-mode enable.\nTW for VS-mode enable.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nReturns the guest virtual address status.\nReturns the hypervisor user mode status.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nGuest virtual address enable.\nSets the guest virtual address status.\nHypervisor user mode enable.\nSets the hypervisor user mode status.\nSupervisor previous virtualization mode enable.\nSets the supervisor previous virtualization mode.\nSupervisor previous virtual privilege enable.\nSets the supervisor previous virtual privilege.\nSets the virtual guest external interrupt number.\nVS-mode memory access endianness enable.\nSets the VS-mode memory access endianness.\nSets the effective XLEN for VS-mode.\nTSR for VS-mode enable.\nSets the TSR for VS-mode.\nTVM for VS-mode enable.\nSets the TVM for VS-mode.\nTW for VS-mode enable.\nSets the TW for VS-mode.\nReturns the supervisor previous virtualization mode.\nReturns the supervisor previous virtual privilege.\nAttempts to reads the CSR.\nReturns the virtual guest external interrupt number.\nReturns the VS-mode memory access endianness.\nReturns the effective XLEN for VS-mode.\nReturns the TSR for VS-mode.\nReturns the TVM for VS-mode.\nReturns the TW for VS-mode.\nWrites the register value to the CSR.\nReads the CSR.\nReads the CSR as a 64-bit value\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nHypervisor Virtual Interrupt Pending Register.\nReturns the raw bits of the register.\nVirtual supervisor external interrupt pending enable.\nVirtual supervisor software interrupt pending enable.\nVirtual supervisor timer interrupt pending enable.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nVirtual supervisor external interrupt pending enable.\nSets the virtual supervisor external interrupt pending.\nVirtual supervisor software interrupt pending enable.\nSets the virtual supervisor software interrupt pending.\nVirtual supervisor timer interrupt pending enable.\nSets the virtual supervisor timer interrupt pending.\nAttempts to reads the CSR.\nReturns the virtual supervisor external interrupt pending.\nReturns the virtual supervisor software interrupt pending.\nReturns the virtual supervisor timer interrupt pending.\nWrites the register value to the CSR.\nBare\nHypervisor Guest Address Translation and Protection …\nSupervisor Virtual Address Translation (SV39)\nSupervisor Virtual Address Translation (SV48)\nVirtual Supervisor Address Translation and Protection …\nReturns the address space identifier.\nReturns the raw bits of the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the guest address translation mode.\nReturns the physical page number for root page table.\nReads the CSR.\nSets the address space identifier.\nSets the guest address translation mode.\nSets the physical page number for root page table.\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nVirtual Supervisor Cause Register\nReturns the raw bits of the register.\nInterrupt cause enable.\nReturns the exception code.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nReturns the interrupt cause status.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nSets the exception code.\nInterrupt cause enable.\nSets the interrupt cause status.\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nVirtual Supervisor Interrupt Enable Register.\nReturns the raw bits of the register.\nSupervisor external interrupt enable.\nSupervisor software interrupt enable.\nSupervisor timer interrupt enable.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nReturns the supervisor external interrupt enable.\nSupervisor external interrupt enable.\nSets the supervisor external interrupt enable.\nSupervisor software interrupt enable.\nSets the supervisor software interrupt enable.\nSupervisor timer interrupt enable.\nSets the supervisor timer interrupt enable.\nReturns the supervisor software interrupt enable.\nReturns the supervisor timer interrupt enable.\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nVirtual Supervisor Interrupt Pending Register.\nReturns the raw bits of the register.\nSupervisor external interrupt pending enable.\nSupervisor software interrupt pending enable.\nSupervisor timer interrupt pending enable.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReads the CSR.\nReturns the supervisor external interrupt pending.\nSupervisor external interrupt pending enable.\nSets the supervisor external interrupt pending.\nSupervisor software interrupt pending enable.\nSets the supervisor software interrupt pending.\nSupervisor timer interrupt pending enable.\nSets the supervisor timer interrupt pending.\nReturns the supervisor software interrupt pending.\nReturns the supervisor timer interrupt pending.\nAttempts to reads the CSR.\nWrites the register value to the CSR.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\n128-bit virtual address space\n32-bit virtual address space\n64-bit virtual address space\nHypervisor User XLEN values.\nVirtual Supervisor Status Register\nReturns the raw bits of the register.\nMake executable readable enable.\nSupervisor interrupt enable.\nSupervisor previous interrupt enable.\nSupervisor previous privilege enable.\nSupervisor user memory enable.\nUser binary endianness enable.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nReturns the floating point state.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the status of the make executable readable bit.\nReads the CSR.\nReturns the status of the dirty state fields.\nSets the floating point state.\nMake executable readable enable.\nSets the MXR (Make eXecutable Readable) bit.\nSets the status of the dirty state fields.\nSupervisor interrupt enable.\nSets the supervisor interrupt enable.\nSupervisor previous interrupt enable.\nSets the supervisor previous interrupt enable.\nSupervisor previous privilege enable.\nSets the supervisor previous privilege.\nSupervisor user memory enable.\nSets the status of the supervisor user memory access bit.\nUser binary endianness enable.\nSets the user binary endianness.\nSets the effective user XLEN setting.\nSets the status of the extension state fields.\nReturns the supervisor interrupt enable.\nReturns the supervisor previous interrupt enable.\nReturns the supervisor previous privilege.\nReturns the status of the supervisor user memory access …\nAttempts to reads the CSR.\nReturns the user binary endianness.\nReturns the effective user XLEN setting.\nWrites the register value to the CSR.\nReturns the status of the extension state fields.\nReads the CSR.\nAttempts to read the CSR.\nAttempts to write the CSR.\nWrites the CSR.\nVirtual Supervisor Trap Vector Base Address Register.\nReturns the base address of the virtual supervisor trap …\nReturns the raw bits of the register.\nReturns the argument unchanged.\nCreates a register value from raw bits.\nCalls <code>U::from(self)</code>.\nReturns the mode of the virtual supervisor trap vector.\nReads the CSR.\nSets the base address of the virtual supervisor trap …\nSets the mode of the virtual supervisor trap vector.\nAttempts to reads the CSR.\nWrites the register value to the CSR.")